model User {
  id     String  @id @default(cuid())
  role   Role    @default(STUDENT)
  userId String
  email  String  @unique
  name   String?
  mobile String? @db.VarChar(10)
  image  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id               String          @id @default(cuid())
  enrollmentNo     String          @unique @db.VarChar(11)
  name             String?
  email            String          @unique
  isLateralEntry   Boolean         @default(false)
  isAlumni         Boolean         @default(false)
  batchId          String?
  branchId         String?
  groupId          String?
  studentDetailsId String?         @unique
  details          StudentDetails?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  batch  Batch?  @relation(fields: [batchId], references: [batch], onDelete: Restrict, onUpdate: Cascade)
  branch Branch? @relation(fields: [branchId], references: [branch], onDelete: Restrict, onUpdate: Cascade)
  group  Group?  @relation(fields: [groupId], references: [group], onDelete: Restrict, onUpdate: Cascade)
}

model StudentDetails {
  id                    String    @id @default(cuid())
  studentId             String    @unique
  ipuRegistrationNumber String?   @unique @db.VarChar(12)
  dob                   DateTime?
  fullAddress           String?
  mobile                String?   @db.VarChar(10)
  gender                Gender?
  category              Category?
  region                Region?
  fatherName            String?
  motherName            String?
  fatherQualification   String?
  motherQualification   String?
  fatherOccupation      String?
  motherOccupation      String?
  fatherJobDesignation  String?
  motherJobDesignation  String?
  fatherBusinessType    String?
  motherBusinessType    String?
  fatherMobile          String?
  motherMobile          String?
  fatherOfficeAddress   String?
  motherOfficeAddress   String?
  guardianName          String?
  board12th             String?
  yearOf12th            Int?
  rollno12th            BigInt?
  school12th            String?
  aggregate12th         Decimal?  @db.Decimal(5, 2)
  board10th             String?
  yearOf10th            Int?
  rollno10th            BigInt?
  school10th            String?
  aggregate10th         Decimal?  @db.Decimal(5, 2)
  jeeRank               Int?
  jeePercentile         Decimal?  @db.Decimal(15, 11)
  jeeRollno             String?   @db.VarChar(12)
  specialAchievements   String?
  passportPhotograph    String?
  marksheet10th         String?
  marksheet12th         String?
  aadhar                String?
  pancard               String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Admin {
  id       String @id @default(cuid())
  email    String @unique
  password String
  name     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Faculty {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  mobile        String?
  designationId String?
  departmentId  String?
  details       FacultyDetails?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  designation Designation? @relation(fields: [designationId], references: [designation], onDelete: Restrict, onUpdate: Cascade)
  department  Department?  @relation(fields: [departmentId], references: [department], onDelete: Restrict, onUpdate: Cascade)
}

model FacultyDetails {
  id                 String      @id @default(cuid())
  facultyId          String      @unique
  employeeCode       String?     @db.VarChar(10)
  dob                DateTime?
  fullAddress        String?     @db.VarChar(150)
  mobile             String?     @db.VarChar(10)
  gender             Gender?
  bloodgroup         BloodGroup?
  emergencyName      String?     @db.VarChar(75)
  emergencyMobile    String?     @db.VarChar(10)
  passportPhotograph String?
  aadhar             String?
  pancard            String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  faculty Faculty @relation(fields: [facultyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Staff {
  id       String  @id @default(cuid())
  staffId  String?
  email    String  @unique
  password String
  name     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  staff StaffType? @relation(fields: [staffId], references: [staffType], onDelete: Restrict, onUpdate: Cascade)
}
